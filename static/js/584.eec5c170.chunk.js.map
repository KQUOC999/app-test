{"version":3,"file":"static/js/584.eec5c170.chunk.js","mappings":"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","sources":["routers/home/ordering_infor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as Realm from 'realm-web';\r\nimport './cart_page.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst app = new Realm.App({ id: process.env.REACT_APP_REALM_ID });\r\n\r\nconst OrderingInfoPage = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const functionName = \"getOrderingInfo\";\r\n      const result = await app.currentUser.callFunction(functionName);\r\n      setProducts(result); // Cập nhật state products với dữ liệu từ server;\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error.error);\r\n    }\r\n  };\r\n\r\n  const handleShowProducts = async (productId) => {\r\n    try {\r\n      // Gọi API để lấy thông tin sản phẩm cụ thể dựa trên productId\r\n      const functionName = \"getOrderingInfo\";\r\n      const productDetail = await app.currentUser.callFunction(functionName,productId);\r\n      \r\n      // Cập nhật trạng thái của sản phẩm\r\n      setProducts(products.map(product => {\r\n        if (product._id === productId) {\r\n          return { ...product, selected: !product.selected }; // Đảo ngược trạng thái selected\r\n        } else {\r\n          return product;\r\n        }\r\n      }));\r\n\r\n      return productDetail;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container_OderingPage\">\r\n      <div className='containers'>\r\n        {loading ? (\r\n          <p>Đang tải sản phẩm...</p>\r\n        ) : (\r\n          <>\r\n            <div className=\"product_list\">\r\n              {Array.isArray(products) && products.length > 0 ? (\r\n                products.map((product, index) => (\r\n                  <div key={index} className=\"products\">\r\n                    <h3>Thông tin đơn hàng {index + 1}</h3>\r\n                    <img src={product.imageUrl} alt={product.imageUrl} />\r\n                    <p><strong>Tên khách hàng:</strong> {product.fullName}</p>\r\n                    <p><strong>Id khách hàng:</strong> {product.user}</p>\r\n                    <p><strong>Thời gian đặt:</strong> {product.date}</p>\r\n                    <p><strong>Email:</strong> {product.email}</p>\r\n                    <p><strong>Address:</strong> {product.address}</p>\r\n                    <p><strong>Số điện thoại:</strong> {product.phoneNumber}</p>\r\n                    <p><strong>Tổng thanh toán:</strong> ${product.totalPays}</p>\r\n                    <button onClick={() => handleShowProducts(product._id)}>\r\n                      {product.selected ? \"Ẩn\" : \"Chi tiết\"} {/* Thay đổi văn bản của nút */}\r\n                    </button>\r\n                    {product.selected && product.products.map((productlist, productIndex) => (\r\n                      <div key={productIndex}>\r\n                        <p><strong>Sản phẩm {productIndex + 1}</strong></p>\r\n                        <p><strong>Tên sản phẩm:</strong> {productlist.productName}</p>\r\n                        <p><strong>Loại sản phẩm:</strong> {productlist.productType}</p>\r\n                        <p><strong>Giá bán:</strong> ${productlist.sellingPrice}</p>\r\n                        <p><strong>Số lượng mua:</strong> {productlist.productCounts}</p>\r\n                        <p><strong>Tổng thanh toán:</strong> ${productlist.totalPay}</p>\r\n                        {/* Các thông tin khác về sản phẩm */}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>Giỏ hàng chưa có sản phẩm nào</p>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <Link to={\"/MyForm\"}>\r\n        <button className='btn_open_myform'>Mở Form</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderingInfoPage;\r\n"],"names":["app","Realm","id","process","OrderingInfoPage","loading","setLoading","useState","products","setProducts","useEffect","fetchData","async","functionName","result","currentUser","callFunction","error","console","log","_jsxs","className","children","_jsx","_Fragment","Array","isArray","length","map","product","index","src","imageUrl","alt","fullName","user","date","email","address","phoneNumber","totalPays","onClick","productDetail","productId","_id","selected","handleShowProducts","productlist","productIndex","productName","productType","sellingPrice","productCounts","totalPay","Link","to"],"sourceRoot":""}