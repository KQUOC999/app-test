{"version":3,"file":"static/js/243.263076c0.chunk.js","mappings":"6LAKA,MAAMA,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,mBAC1BC,EAAOJ,EAAIK,YAoUjB,EAlUeC,KAEX,MAAOC,EAASC,IAAsEC,EAAAA,EAAAA,WAAS,IACxFC,EAAmCC,IAA4CF,EAAAA,EAAAA,UAAS,CAAC,IACzFG,EAAoCC,IAA2CJ,EAAAA,EAAAA,UAAS,CAAC,IAEzFK,EAAQC,IAAuEN,EAAAA,EAAAA,UAAS,OACxFO,EAAqBC,IAA0DR,EAAAA,EAAAA,UAAS,CAAC,IACzF,CAAGS,IAA4ET,EAAAA,EAAAA,UAAS,IAIzFU,GAA2BC,EAAAA,EAAAA,cAAYC,UACzC,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EACA,MAAMC,EAAe,mBACfC,QAAqB,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,aAAaF,IAE1Cf,EAA6C,OAARgB,QAAQ,IAARA,GAAgB,QAARL,EAARK,EAAUE,cAAM,IAAAP,GAAO,QAAPC,EAAhBD,EAAkBQ,aAAK,IAAAP,OAAf,EAARA,EAAyBQ,YAC9DlB,EAA8C,OAARc,QAAQ,IAARA,GAAgB,QAARH,EAARG,EAAUE,cAAM,IAAAL,GAAQ,QAARC,EAAhBD,EAAkBQ,cAAM,IAAAP,OAAhB,EAARA,EAA0BQ,UAChEzB,GAAW,EACf,CAAE,MAAO0B,GACLC,QAAQD,MAAM,uBAAwBA,GACtC1B,GAAW,EACf,IACD,KAEH4B,EAAAA,EAAAA,YAAU,KACNjB,GAA0B,GAC3B,CAACA,IAEJ,MAAMkB,GAAoBjB,EAAAA,EAAAA,cAAakB,IACnC,IAAIC,EAAc,EAClB,OAAQD,GACJ,IAAK,sBACDC,EAAc,IACd,MACJ,IAAK,uBACDA,EAAc,IACd,MACJ,IAAK,gBACDA,EAAc,IACd,MACJ,IAAK,wBACDA,EAAc,IACd,MACJ,IAAK,yBACDA,EAAc,IACd,MACJ,IAAK,MACDA,EAAc,IACd,MACJ,IAAK,MACDA,EAAc,KACd,MACJ,IAAK,MACDA,EAAc,KACd,MACJ,QACIA,EAAc,EAGtBtB,GAAuBuB,IAAa,IAADC,EAAAC,EAE/B,OADmC,OAARF,QAAQ,IAARA,GAAsC,QAA9BC,EAARD,EAAW,kDAA2B,IAAAC,GAAM,QAANC,EAAtCD,EAAwCE,YAAI,IAAAD,OAApC,EAARA,EAA+C,uCAC/CH,EAChB,IACAC,EACH,0CAA4B,IACrBA,EAAS,2CACZG,KAAM,IACCH,EAAS,2CAA4BG,KACxC,mCAAgBJ,KAKzBC,CAAQ,GACjB,GACH,KAEHJ,EAAAA,EAAAA,YAAU,KAAO,IAADQ,EAAAC,EACZ,MAAMP,EAA0B,OAAnBtB,QAAmB,IAAnBA,GAAiD,QAA9B4B,EAAnB5B,EAAsB,kDAA2B,IAAA4B,GAAM,QAANC,EAAjDD,EAAmDD,YAAI,IAAAE,OAApC,EAAnBA,EAAyDF,KAClEL,GACAD,EAAkBC,EACtB,GACD,CAACtB,EAAqBqB,IAKzB,MAqHMS,EAAqBzB,UAGnB,MACMM,QAA0B,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,aADb,uBAIrB,GAAImB,MAAMC,QAAQrB,IAAaA,EAASsB,OAAS,EAAG,CAEhD,MAAMC,EAAoCvB,EAASwB,KAAIC,IAAG,IAAAC,EAAAC,EAAAC,EAAA,OAAc,QAAdF,EAAID,EAAIvB,cAAM,IAAAwB,GAAQ,QAARC,EAAVD,EAAYrB,cAAM,IAAAsB,GAAa,QAAbC,EAAlBD,EAAoBE,mBAAW,IAAAD,OAArB,EAAVA,EAAkC,2BAA2B,IACrHE,EAAoC9B,EAASwB,KAAIC,IAAG,IAAAM,EAAAC,EAAAC,EAAA,OAAc,QAAdF,EAAIN,EAAIvB,cAAM,IAAA6B,GAAQ,QAARC,EAAVD,EAAY1B,cAAM,IAAA2B,GAAa,QAAbC,EAAlBD,EAAoBH,mBAAW,IAAAI,OAArB,EAAVA,EAAkC,wCAAwB,IAClHC,EAAoClC,EAASwB,KAAIC,IAAG,IAAAU,EAAAC,EAAAC,EAAA,OAAc,QAAdF,EAAIV,EAAIvB,cAAM,IAAAiC,GAAQ,QAARC,EAAVD,EAAY9B,cAAM,IAAA+B,GAAa,QAAbC,EAAlBD,EAAoBP,mBAAW,IAAAQ,OAArB,EAAVA,EAAkC,0CAAsB,IAChHC,EAAoCtC,EAASwB,KAAIC,IAAG,IAAAc,EAAAC,EAAAC,EAAA,OAAc,QAAdF,EAAId,EAAIvB,cAAM,IAAAqC,GAAQ,QAARC,EAAVD,EAAYlC,cAAM,IAAAmC,GAAa,QAAbC,EAAlBD,EAAoBX,mBAAW,IAAAY,OAArB,EAAVA,EAAkC,qBAAW,IACrGC,EAAoC1C,EAASwB,KAAIC,IAAG,IAAAkB,EAAAC,EAAAC,EAAA,OAAc,QAAdF,EAAIlB,EAAIvB,cAAM,IAAAyC,GAAQ,QAARC,EAAVD,EAAYtC,cAAM,IAAAuC,GAAa,QAAbC,EAAlBD,EAAoBf,mBAAW,IAAAgB,OAArB,EAAVA,EAAkC,kDAAsB,IAGhHC,EAAoCvB,EAA2BA,EAA2BD,OAAS,GACnGyB,EAAoCjB,EAAuBA,EAAuBR,OAAS,GAC3F0B,EAAoCd,EAAUA,EAAUZ,OAAS,GACjE2B,EAAoCX,EAA0BA,EAA0BhB,OAAS,GACjG4B,EAAoCR,EAAqBA,EAAqBpB,OAAS,GAE7F,QAA4C6B,IAAxCL,QACwCK,IAAxCJ,QACwCI,IAAxCH,QACwCG,IAAxCF,QACwCE,IAAxCD,EAAmD,CAGnD3D,GAAiB6D,GAAahC,MAAMC,QAAQ+B,GAAa,IAAIA,EAAWN,GAAoC,CAACA,KAC7GvD,GAAiB6D,GAAahC,MAAMC,QAAQ+B,GAAa,IAAIA,EAAWL,GAAgC,CAACA,KACzGxD,GAAiB6D,GAAahC,MAAMC,QAAQ+B,GAAa,IAAIA,EAAWJ,GAAmB,CAACA,KAC5FzD,GAAiB6D,GAAahC,MAAMC,QAAQ+B,GAAa,IAAIA,EAAWH,GAAmC,CAACA,KAC5G1D,GAAiB6D,GAAahC,MAAMC,QAAQ+B,GAAa,IAAIA,EAAWF,GAA8B,CAACA,KAsB3G,MAnB8B,CACtB,cAAiB,CACb,aAAgBJ,GAEpB,iBAAa,CACT,iBAAaC,GAEjB,0CAAuB,CACnB,YAAeC,GAEnB,6CAAoC,CAChC,QAAWC,GAEf,qBAAY,CACR,wBAAiBC,GAO7B,CACI1C,QAAQD,MAAM,sEAEtB,MACIC,QAAQD,MAAM,sFAClB,EAIR,OACI8C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACK3E,GACGyE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4CAA2CD,UACtDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAuBD,SAAC,kBAG3CF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,sBAAqBD,SAAA,CAE/BxE,GACGsE,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CACDC,OAAQ5E,EACR6E,UAAWA,EAAAA,GACXC,SAAUxE,EACVyE,SAlMFpE,UAClB,IAEI,GAAIqE,EAAM,CAAC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACN,MAAMC,EAAqC,QAAxB1B,EAAWD,EAAKF,gBAAQ,IAAAG,GAA8B,QAA9BC,EAAbD,EAAgB,kDAA2B,IAAAC,OAA9B,EAAbA,EAA8C,gCACtE0B,EAAqC,QAAxBzB,EAAWH,EAAKF,gBAAQ,IAAAK,GAA8B,QAA9BC,EAAbD,EAAgB,kDAA2B,IAAAC,OAA9B,EAAbA,EAA6CnD,KACrE4E,EAAqC,QAAxBxB,EAAWL,EAAKF,gBAAQ,IAAAO,GAA8B,QAA9BC,EAAbD,EAAgB,kDAA2B,IAAAC,GAAM,QAANC,EAA3CD,EAA6CwB,YAAI,IAAAvB,OAApC,EAAbA,EAAoD,oBAC5EwB,EAAqC,QAAzBvB,EAAYR,EAAKF,gBAAQ,IAAAU,GAA8B,QAA9BC,EAAbD,EAAgB,kDAA2B,IAAAC,OAA9B,EAAbA,EAA6CuB,mBACrEC,EAAqC,QAA1BvB,EAAaV,EAAKF,gBAAQ,IAAAY,GAA8B,QAA9BC,EAAbD,EAAgB,kDAA2B,IAAAC,OAA9B,EAAbA,EAA6CuB,MACrEC,EAAqC,QAApBvB,EAAOZ,EAAKF,gBAAQ,IAAAc,GAAqB,QAArBC,EAAbD,EAAgB,+BAAkB,IAAAC,OAArB,EAAbA,EAAoCzE,MAC5DgG,EAAqC,QAAjCtB,EAAoBd,EAAKF,gBAAQ,IAAAgB,GAA+B,QAA/BC,EAAbD,EAAgB,wDAA4B,IAAAC,OAA/B,EAAbA,EAA8C3E,MACtEiG,EAAqC,QAAjBrB,EAAIhB,EAAKF,gBAAQ,IAAAkB,GAA4C,QAA5CC,EAAbD,EAAgB,2DAAyC,IAAAC,OAA5C,EAAbA,EAA2D7E,MACnFkG,EAAqC,QAAxBpB,EAAWlB,EAAKF,gBAAQ,IAAAoB,GAAc,QAAdC,EAAbD,EAAgB,6BAAW,IAAAC,OAAd,EAAbA,EAA6BoB,MAMjDC,EAAmB,CACrB9H,KAAMA,EAAKF,GACXiI,KAAmB,OAAbd,QAAa,IAAbA,OAAa,EAAbA,EAAec,KACrBC,GAAiB,OAAbf,QAAa,IAAbA,OAAa,EAAbA,EAAee,GACnBzF,KAAmB,OAAb2E,QAAa,IAAbA,OAAa,EAAbA,EAAe3E,KACrB0F,YAA0B,OAAbf,QAAa,IAAbA,OAAa,EAAbA,EAAgB,oCAC7BgB,MAAmB,OAAbf,QAAa,IAAbA,OAAa,EAAbA,EAAepE,KAAIoF,IAAI,CACzBC,UAAe,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAO,2BAClBE,MAAW,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAO,2BACX,GACPG,QAASjB,EACTG,MAAOD,GAILgB,EAA8B,CAChCC,KAAMf,EAAkBgB,SACxBC,SAA2B,OAAjBjB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAoB,0BAC9BO,GAAqB,OAAjBP,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBO,GACvBW,YAA8B,OAAjBlB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAoB,uCACjCmB,MAAwB,OAAjBnB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAoB,mBAC3BoB,eAAiC,OAAjBpB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAoB,uCACpCqB,cAAgC,OAAjBrB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAoB,uBAKjCsB,EAAkB,CACpBC,qBAAsBtB,EAAKe,SAC3BQ,WAAsBvB,EAAKwB,aAC3BC,SAAsBzB,EAAK0B,UAC3BC,UAAsB3B,EAAKK,KAC3BuB,UAAsB5B,EAAK6B,YAC3BlB,MAAsBX,EAAK8B,OAIzBC,EAAgC,CAClCC,uBAA0B,CACtBC,cAA0C,OAApBhC,QAAoB,IAApBA,GAAwD,QAApCjB,EAApBiB,EAAuB,2EAAiC,IAAAjB,OAApC,EAApBA,EAA2D,4CACjFkD,aAA0C,OAApBjC,QAAoB,IAApBA,GAAwD,QAApChB,EAApBgB,EAAuB,2EAAiC,IAAAhB,OAApC,EAApBA,EAA2D,yBAErFkD,UAA8C,OAApBlC,QAAoB,IAApBA,GAAqC,QAAjBf,EAApBe,EAAuB,sBAAc,IAAAf,OAAjB,EAApBA,EAAwC,yBAClEkD,YAA8C,OAApBnC,QAAoB,IAApBA,GAAiC,QAAbd,EAApBc,EAAsBmC,mBAAW,IAAAjD,OAAb,EAApBA,EAAoC,0BAC9DkD,mBAA0B,CACtBC,UAA0C,OAApBrC,QAAoB,IAApBA,GAAiD,QAA7Bb,EAApBa,EAAuB,qDAA0B,IAAAb,OAA7B,EAApBA,EAAoD,mBAC1EmD,cAA0C,OAApBtC,QAAoB,IAApBA,GAAiD,QAA7BZ,EAApBY,EAAuB,qDAA0B,IAAAZ,OAA7B,EAApBA,EAAoD,yDAE9EmD,aAAiC,OAApBvC,QAAoB,IAApBA,GAAoC,QAAhBX,EAApBW,EAAsBwC,qCAAc,IAAAnD,OAAhB,EAApBA,EAAsCjE,KAAIoF,IAAI,CACvDiC,WAAgB,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAO,2BACnBkC,aAAkB,OAAJlC,QAAI,IAAJA,OAAI,EAAJA,EAAO,wCACrBmC,kBAAuB,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAO,qDACvB,IAILoC,EAAsB,CACxBC,KAA+B,OAAb5C,QAAa,IAAbA,OAAa,EAAbA,EAAe4C,KACjCC,KAA+B,OAAb7C,QAAa,IAAbA,OAAa,EAAbA,EAAe6C,KACjCC,KAA+B,OAAb9C,QAAa,IAAbA,OAAa,EAAbA,EAAe8C,KACjCC,gBAA+B,OAAb/C,QAAa,IAAbA,OAAa,EAAbA,EAAgB,oDAMpCgD,EAAkB,CACpBC,0BAA0B7K,EAAKF,GAC/BgL,oCAA0BhD,EAC1BiD,wCAA0BxC,EAC1ByC,0CAA0BjC,EAC1BkC,qBAA0BxB,EAC1ByB,qBAA0BX,GAI5BY,QAAiBvL,EAAIK,YAAYuB,aAAa,eAAgBoJ,GACpE7I,QAAQqJ,IAAID,GAGZ,MAAME,QAAyB3I,EAAmB4C,EAAKF,UACvDzE,EAAU0K,GAGVtK,GAEA,MACIgB,QAAQD,MAAM,mCAEtB,CAAE,MAAOA,GACLC,QAAQD,MAAM,uBAAwBA,EAC1C,GAsFoBwJ,SAvMGC,IACvB1K,EAAuB0K,EAAEnG,SAAS,KA2MlBR,EAAAA,EAAAA,KAAA,OAAAE,SAAK,qDAGRtE,GACGoE,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CACDC,OAAQ1E,EACR2E,UAAWA,EAAAA,GACXqG,UAAU,EACVpG,SAAU1E,EACV+K,SAAU,CACN,yBAA0B,CACtB,UAAY,OAMxB7G,EAAAA,EAAAA,KAAA,OAAAE,SAAK,uDAGTF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oCAKZ,C","sources":["routers/home/FormInput.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport Form from \"@rjsf/core\";\r\nimport validator from '@rjsf/validator-ajv8';\r\nimport * as Realm from 'realm-web';\r\n\r\nconst app = new Realm.App({ id: process.env.REACT_APP_REALM_ID });\r\nconst user = app.currentUser;\r\n\r\nconst MyForm = () => {\r\n\r\n    const [loading, setLoading]                                                         = useState(true);\r\n    const [jsonSchemaCalculateNetSalaryInput, setJsonSchemaCalculateNetSalaryInput]     = useState({});\r\n    const [jsonSchemaCalculateNetSalaryOutput, setJsonSchemaCalculateNetSalaryOutput]   = useState({});\r\n\r\n    const [result, setResult]                                                           = useState(null); \r\n    const [formDataInputChange, setFormDataInputChange]                                 = useState({});\r\n    const [ , setResponseArray]                                                         = useState([]);\r\n\r\n\r\n\r\n    const fetchDataNetSalaryModule = useCallback(async () => {\r\n        try {\r\n            const functionName = \"salaryFormModule\";\r\n            const response = await user?.callFunction(functionName);\r\n\r\n            setJsonSchemaCalculateNetSalaryInput(response?.public?.input?.jsonSchema);\r\n            setJsonSchemaCalculateNetSalaryOutput(response?.public?.output?.jsonData);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchDataNetSalaryModule();\r\n    }, [fetchDataNetSalaryModule]);\r\n\r\n    const updateBasicSalary = useCallback((part) => {\r\n        let basicSalary = 0;\r\n        switch (part) {\r\n            case \"Teaching Department\":\r\n                basicSalary = 5000;\r\n                break;\r\n            case \"Technical Department\":\r\n                basicSalary = 6000;\r\n                break;\r\n            case \"HR Department\":\r\n                basicSalary = 7000;\r\n                break;\r\n            case \"Production Department\":\r\n                basicSalary = 8000;\r\n                break;\r\n            case \"Supervision Department\":\r\n                basicSalary = 9000;\r\n                break;\r\n            case \"R&D\":\r\n                basicSalary = 10000;\r\n                break;\r\n            case \"CFO\":\r\n                basicSalary = 11000;\r\n                break;\r\n            case \"CEO\":\r\n                basicSalary = 12000;\r\n                break;\r\n            default:\r\n                basicSalary = 0;\r\n        }\r\n\r\n        setFormDataInputChange(prevData => {\r\n            const currentBasicSalary = prevData?.[\"Thu nhập chịu thuế Input\"]?.Part?.[\"Lương_cơ_bản\"];\r\n            if (currentBasicSalary !== basicSalary) {\r\n                return {\r\n                    ...prevData,\r\n                    \"Thu nhập chịu thuế Input\": {\r\n                        ...prevData[\"Thu nhập chịu thuế Input\"],\r\n                        Part: {\r\n                            ...prevData[\"Thu nhập chịu thuế Input\"].Part,\r\n                            \"Lương_cơ_bản\": basicSalary\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            return prevData;\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const part = formDataInputChange?.[\"Thu nhập chịu thuế Input\"]?.Part?.Part;\r\n        if (part) {\r\n            updateBasicSalary(part);\r\n        }\r\n    }, [formDataInputChange, updateBasicSalary]);\r\n\r\n\r\n    \r\n\r\n    const handleInputChange = (e) => {\r\n        setFormDataInputChange(e.formData);\r\n    };\r\n    \r\n    const handleSubmit1 = async (form) => {\r\n        try {\r\n            // Kiểm tra xem formData có tồn tại không\r\n            if (form) {\r\n                const IncomeTaxInfo         = form.formData?.[\"Thu nhập chịu thuế Input\"]?.[\"Thông_tin_nhân_viên\"];\r\n                const IncomeTaxPart         = form.formData?.[\"Thu nhập chịu thuế Input\"]?.Part;\r\n                const IncomekpiData         = form.formData?.[\"Thu nhập chịu thuế Input\"]?.Plan?.[\"Chỉ_tiêu\"];\r\n                const IncomeBlance          = form.formData?.[\"Thu nhập chịu thuế Input\"]?.Budget_performance;\r\n                const IncomeBonus           = form.formData?.[\"Thu nhập chịu thuế Input\"]?.Bonus;\r\n                const PersonalIncomeTax     = form.formData?.[\"Thuế TNCN Input\"]?.input;\r\n                const LOAN                  = form.formData?.[\"LOAN_Tiền ứng trước Input\"]?.input;\r\n                const ExpenseReimbursement  = form.formData?.[\"EXPENSE REIMBURSEMENT - KHẤU TRỪ Input\"]?.input;\r\n                const InsuranceType         = form.formData?.[\"BẢO HIỂM\"]?.Input\r\n                \r\n\r\n            //    console.log(\"Thông tin Insurance   : \", InsuranceType);\r\n\r\n                //Thông tin Lương cơ bản\r\n                    const dataToSendIncome = {\r\n                        user: user.id,\r\n                        Name: IncomeTaxInfo?.Name,\r\n                        ID: IncomeTaxInfo?.ID,\r\n                        Part: IncomeTaxPart?.Part,\r\n                        BasicSalary: IncomeTaxPart?.[\"Lương_cơ_bản\"],\r\n                        KPIs: IncomekpiData?.map(item => ({\r\n                            NameTaget: item?.[\"Tên_chỉ_tiêu\"],\r\n                            Money: item?.[\"Số_tiền\"]\r\n                        })) || [],// Trả về một mảng rỗng nếu IncomekpiData không tồn tại hoặc là null/undefined\r\n                        Balance: IncomeBlance,\r\n                        Bonus: IncomeBonus\r\n                    };\r\n\r\n                //Thông tin Thuế thu nhập cá nhân\r\n                    const dataToSendPersonalIncomeTax = {\r\n                        Date: PersonalIncomeTax.Datetime,\r\n                        FullName: PersonalIncomeTax?.[\"Tên_nhân_viên\"],\r\n                        ID: PersonalIncomeTax?.ID,\r\n                        SalaryNoTax: PersonalIncomeTax?.[\"Lương_chưa_thuế\"],\r\n                        Level: PersonalIncomeTax?.[\"Hệ_số\"],\r\n                        ReduceYourSelf: PersonalIncomeTax?.[\"Giảm trừ bản thân\"],\r\n                        InsuranceFees: PersonalIncomeTax?.[\"Bảo_hiểm\"]\r\n                    };\r\n\r\n\r\n                //Thông tin LOAN - Tiền ứng trước\r\n                    const dataToSendLOAN  = {\r\n                        LoanRegistrationTime: LOAN.Datetime,\r\n                        ExpriedDay          : LOAN.Expired_days,\r\n                        LoanType            : LOAN.Loan_type,\r\n                        StaffName           : LOAN.Name,\r\n                        RefundDay           : LOAN.Refund_date,\r\n                        Money               : LOAN.Value\r\n                    };    \r\n\r\n                //Thông tin EXPENSE REIMBURSEMENT - KHẤU TRỪ Input\r\n                    const dataToSendExpenseReibursement = {\r\n                        NotEnoughTargetStudent  : {\r\n                            StudentNumber       : ExpenseReimbursement?.[\"Số_học_viên_không_đủ_chỉ_tiêu \"]?.[\"Số_lượng_học_viên\"],\r\n                            StudentMoney        : ExpenseReimbursement?.[\"Số_học_viên_không_đủ_chỉ_tiêu \"]?.[\"Số_tiền_HV\"]\r\n                        },\r\n                        DefautFee               : ExpenseReimbursement?.[\"Default fee\"]?.[\"Số_tiền_Def\"],\r\n                        Outsourcing             : ExpenseReimbursement?.Outsourcing?.[\"Số_tiền_Outs\"],\r\n                        UnauthorizedDayoff      : {\r\n                            DayNumber           : ExpenseReimbursement?.[\"Số_ngày_nghỉ_không_phép\"]?.[\"Số_ngày\"],\r\n                            MoneyOfDayoff       : ExpenseReimbursement?.[\"Số_ngày_nghỉ_không_phép\"]?.[\"Số_tiền_trên_một_ngày_nghỉ\"]\r\n                        },\r\n                        LackTargets: ExpenseReimbursement?.Thiếu_chỉ_tiêu?.map(item => ({\r\n                            TargetName: item?.[\"Tên_chỉ_tiêu\"],\r\n                            RegisterName: item?.[\"Người_đăng_ký\"],\r\n                            CompensationMoney: item?.[\"Số_tiền_bồi_thường\"]\r\n                        })) || []\r\n                    };\r\n\r\n                //Thông tin Insurance - Bảo hiểm\r\n                    const dataToSendInsurance = {\r\n                        BHTN            : InsuranceType?.BHTN,\r\n                        BHXH            : InsuranceType?.BHXH,\r\n                        BHYT            : InsuranceType?.BHYT,\r\n                        SalaryInsurance : InsuranceType?.[\"Lương_đóng_bảo_hiểm\"]\r\n                    }\r\n\r\n                //   console.log(\"Thông tin nhân viên: \", dataToSendIncome,dataToSendPersonalIncomeTax, dataToSendLOAN,dataToSendExpenseReibursement,dataToSendInsurance);\r\n\r\n            // Gộp mảng thông tin\r\n                const dataTotalToSend = {\r\n                    Người_dùng              : user.id,\r\n                    Thu_nhập_chịu_thuế      : dataToSendIncome,\r\n                    Thuế_thu_nhập_cá_nhân   : dataToSendPersonalIncomeTax,\r\n                    LOAN_Tiền_ứng_trước     : dataToSendLOAN,\r\n                    Khấu_trừ                : dataToSendExpenseReibursement,\r\n                    Bảo_hiểm                : dataToSendInsurance\r\n                }  \r\n            \r\n            //Gửi đối tượng về server\r\n            const sendData = await app.currentUser.callFunction(\"receivedData\", dataTotalToSend);\r\n            console.log(sendData);\r\n\r\n            //code trả về kết quả tính toán đưa vào form output:\r\n            const calculatedResult = await calculateNetSalary(form.formData);\r\n            setResult(calculatedResult);\r\n\r\n            // Cập nhật kết quả\r\n            fetchDataNetSalaryModule();\r\n\r\n            } else {\r\n                console.error('Form data is missing or invalid.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n//Hàm tính toán dữ liệu trả về Output   \r\n    const calculateNetSalary = async () => {\r\n\r\n        //Test come code....///////////////////\r\n            const functionName = \"calculateNetSalary\";\r\n            const response     =  await user?.callFunction(functionName);\r\n\r\n            // Kiểm tra xem response có phải là một mảng không\r\n            if (Array.isArray(response) && response.length > 0) {\r\n                // Lấy giá trị từ phản hồi\r\n                const TotalsalarywithouttaxArray        = response.map(res => res.public?.output?.calculation?.[\"Total salary without tax\"]);\r\n                const PersonalIncomeTaxArray            = response.map(res => res.public?.output?.calculation?.[\"Thuế_thu_nhập_cá_nhân\"]);\r\n                const LOANArray                         = response.map(res => res.public?.output?.calculation?.[\"LOAN_Tiền_ứng_trước\"]);\r\n                const ExpenseReimbursementArray         = response.map(res => res.public?.output?.calculation?.[\"Khấu_trừ\"]);\r\n                const InsuranceSalaryArray              = response.map(res => res.public?.output?.calculation?.[\"Lương_đóng_bảo_hiểm\"]);\r\n\r\n                // Cập nhật giá trị mới nhất từ phản hồi\r\n                const latestTotalsalarywithouttaxArray  = TotalsalarywithouttaxArray[TotalsalarywithouttaxArray.length - 1];\r\n                const latestPersonalIncomeTaxArray      = PersonalIncomeTaxArray[PersonalIncomeTaxArray.length - 1];\r\n                const latestLOANArray                   = LOANArray[LOANArray.length - 1];\r\n                const latestExpenseReimbursementArray   = ExpenseReimbursementArray[ExpenseReimbursementArray.length - 1];\r\n                const latestInsuranceSalaryArray        = InsuranceSalaryArray[InsuranceSalaryArray.length - 1];\r\n\r\n                if (latestTotalsalarywithouttaxArray    !== undefined || \r\n                    latestPersonalIncomeTaxArray        !== undefined || \r\n                    latestLOANArray                     !== undefined ||\r\n                    latestExpenseReimbursementArray     !== undefined ||\r\n                    latestInsuranceSalaryArray          !== undefined) {\r\n\r\n                    // Thêm giá trị abc vào mảng state\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestTotalsalarywithouttaxArray] : [latestTotalsalarywithouttaxArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestPersonalIncomeTaxArray] : [latestPersonalIncomeTaxArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestLOANArray] : [latestLOANArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestExpenseReimbursementArray] : [latestExpenseReimbursementArray]);\r\n                    setResponseArray(prevArray => Array.isArray(prevArray) ? [...prevArray, latestInsuranceSalaryArray] : [latestInsuranceSalaryArray]);\r\n\r\n                // Tạo form output để hiện thị kết quả\r\n                    const outputCalculation = {\r\n                        \"Salary_no_tax\": {\r\n                            \"Total_salary\": latestTotalsalarywithouttaxArray\r\n                        },\r\n                        \"Thuế_TNCN\": {\r\n                            \"Thuế_TNCN\": latestPersonalIncomeTaxArray\r\n                        },\r\n                        \"LOAN_Tiền ứng trước\": {\r\n                            \"Loan_amount\": latestLOANArray\r\n                        },\r\n                        \"EXPENSE REIMBURSEMENT - KHẤU TRỪ\": {\r\n                            \"Expense\": latestExpenseReimbursementArray\r\n                        },\r\n                        \"BẢO HIỂM\": {\r\n                            \"Thành_tiền_BH\": latestInsuranceSalaryArray\r\n                        }\r\n                    };\r\n\r\n                // Trả về kết quả tính toán\r\n                return outputCalculation;\r\n\r\n                } else {\r\n                    console.error(\"Không tìm thấy giá trị trong phản hồi.\");\r\n                }\r\n            } else {\r\n                console.error(\"Phản hồi không phải là một mảng hoặc rỗng.\");\r\n            }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <div className=\"flex items-center justify-center h-screen\">\r\n                    <div className=\"text-gray-600 text-lg\">Loading...</div>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                <div className=\"flex justify-center\">\r\n\r\n                    {jsonSchemaCalculateNetSalaryInput ? (\r\n                        <Form \r\n                            schema={jsonSchemaCalculateNetSalaryInput}\r\n                            validator={validator}\r\n                            formData={formDataInputChange}\r\n                            onSubmit={handleSubmit1}\r\n                            onChange={handleInputChange}\r\n\r\n                        />\r\n                        \r\n                    ) : (\r\n                        <div>Không có jsonSchemaCalculateNetSalaryInput</div>\r\n                    )}\r\n\r\n                    {jsonSchemaCalculateNetSalaryOutput ? (\r\n                        <Form \r\n                            schema={jsonSchemaCalculateNetSalaryOutput}\r\n                            validator={validator}\r\n                            disabled={true} // Tắt khả năng chỉnh sửa trường nhập\r\n                            formData={result}\r\n                            uiSchema={{\r\n                                \"ui:submitButtonOptions\": {\r\n                                    \"norender\": true // Ẩn nút submit\r\n                                }\r\n                            }}\r\n                        />\r\n                        \r\n                    ) : (\r\n                        <div>Không có jsonSchemaCalculateNetSalaryOutput</div>\r\n                    )}\r\n\r\n                    <p>Kết quả là: </p>\r\n                        \r\n                </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyForm;\r\n"],"names":["app","Realm","id","process","user","currentUser","MyForm","loading","setLoading","useState","jsonSchemaCalculateNetSalaryInput","setJsonSchemaCalculateNetSalaryInput","jsonSchemaCalculateNetSalaryOutput","setJsonSchemaCalculateNetSalaryOutput","result","setResult","formDataInputChange","setFormDataInputChange","setResponseArray","fetchDataNetSalaryModule","useCallback","async","_response$public","_response$public$inpu","_response$public2","_response$public2$out","functionName","response","callFunction","public","input","jsonSchema","output","jsonData","error","console","useEffect","updateBasicSalary","part","basicSalary","prevData","_prevData$ThuNhậpCh","_prevData$ThuNhậpCh$P","Part","_formDataInputChange$","_formDataInputChange$2","calculateNetSalary","Array","isArray","length","TotalsalarywithouttaxArray","map","res","_res$public","_res$public$output","_res$public$output$ca","calculation","PersonalIncomeTaxArray","_res$public2","_res$public2$output","_res$public2$output$c","LOANArray","_res$public3","_res$public3$output","_res$public3$output$c","ExpenseReimbursementArray","_res$public4","_res$public4$output","_res$public4$output$c","InsuranceSalaryArray","_res$public5","_res$public5$output","_res$public5$output$c","latestTotalsalarywithouttaxArray","latestPersonalIncomeTaxArray","latestLOANArray","latestExpenseReimbursementArray","latestInsuranceSalaryArray","undefined","prevArray","_jsx","_Fragment","children","className","_jsxs","Form","schema","validator","formData","onSubmit","form","_form$formData","_form$formData$ThuNh","_form$formData2","_form$formData2$ThuN","_form$formData3","_form$formData3$ThuN","_form$formData3$ThuN$","_form$formData4","_form$formData4$ThuN","_form$formData5","_form$formData5$ThuN","_form$formData6","_form$formData6$Thuế","_form$formData7","_form$formData7$LOAN_","_form$formData8","_form$formData8$EXPEN","_form$formData9","_form$formData9$BẢOH","_ExpenseReimbursement","_ExpenseReimbursement2","_ExpenseReimbursement3","_ExpenseReimbursement4","_ExpenseReimbursement5","_ExpenseReimbursement6","_ExpenseReimbursement7","IncomeTaxInfo","IncomeTaxPart","IncomekpiData","Plan","IncomeBlance","Budget_performance","IncomeBonus","Bonus","PersonalIncomeTax","LOAN","ExpenseReimbursement","InsuranceType","Input","dataToSendIncome","Name","ID","BasicSalary","KPIs","item","NameTaget","Money","Balance","dataToSendPersonalIncomeTax","Date","Datetime","FullName","SalaryNoTax","Level","ReduceYourSelf","InsuranceFees","dataToSendLOAN","LoanRegistrationTime","ExpriedDay","Expired_days","LoanType","Loan_type","StaffName","RefundDay","Refund_date","Value","dataToSendExpenseReibursement","NotEnoughTargetStudent","StudentNumber","StudentMoney","DefautFee","Outsourcing","UnauthorizedDayoff","DayNumber","MoneyOfDayoff","LackTargets","Thiếu_chỉ_tiêu","TargetName","RegisterName","CompensationMoney","dataToSendInsurance","BHTN","BHXH","BHYT","SalaryInsurance","dataTotalToSend","Người_dùng","Thu_nhập_chịu_thuế","Thuế_thu_nhập_cá_nhân","LOAN_Tiền_ứng_trước","Khấu_trừ","Bảo_hiểm","sendData","log","calculatedResult","onChange","e","disabled","uiSchema"],"sourceRoot":""}